'''
@Description: get the data from shixiseng.com
@Author: Chase Huang
@Date: 2019-06-09 16:06:49
@LastEditTime: 2019-06-10 11:27:38
'''
import requests
import pandas as pd
import re
import base64
from lxml import etree

# class Shixiseng(object):
#     def __init__(self, keyword, num_page):
#         self.start_urls = [
#             'https://www.shixiseng.com/interns?k={}&p={}'.format(keyword, i)
#             for i in range(1, num_page + 1)
#         ]
#         self.headers = {
#             'Accept':
#             'application/json, text/javascript, */*; q=0.01',
#             'Accept-Encoding':
#             'gzip, deflate, br',
#             'Accept-Language':
#             'zh-CN,zh;q=0.9',
#             'Connection':
#             'keep-alive',
#             'Host':
#             'www.shixiseng.com',
#             'User-Agent':
#             'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36'
#         }

#     def get_data(self):
#         for url in self.start_urls:
#             res = requests.get(url=url, headers=self.headers)
#             page = url.split('=')[-1]
#             self.parse_data(res, page)
#             print("Get data from page {} successful!".format(page))

#     @staticmethod
#     def parse_data(res, page):
#         pass
# if __name__ == "__main__":
#     SXS = Shixiseng('数据分析', 2)
#     SXS.get_data()

font = ''

fontdata = base64.b64decode(font)

file = open('1.ttf', 'wb')
file.write(fontdata)
file.close()

import fontforge


def tff2Unicode():  # 将字体映射为unicode列表
    filename = '1.ttf'
    fnt = fontforge.open(filename)
    for i in fnt.glyphs():
        print(i.unicode)